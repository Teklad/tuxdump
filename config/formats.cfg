formats: {
    cpp: {
        timestamp = "// Generated on {:%Y-%m-%d %H:%M:%S}\n"
        variable_offset = "constexpr uintptr_t {0} = {1:#x};\n"
        tab_character = "    "
        all: {
            start = "#ifndef __TD_{0}_H__\n#define  __TD_{0}_H__\n#include <cstdint>\n\n"
            end = "#endif //__TD_{0}_H__\n"
        }
        signatures: {
            start = "namespace Signatures {{\n"
            end = "}}\n"
        }
        netvars: {
            start = "namespace Netvars {{\n"
            end = "}}\n"
            table_start = "namespace {0} {{\n"
            table_end = "}}\n"
            strip_table_prefix = true
            replace_chars = (
                ["[", "_"],
                [".", "_"],
                ["]"]
            )
        }
    }

    java: {
        timestamp = "// Generated on {:%Y-%m-%d %H:%M:%S}\n"
        variable_offset = "public static final long {0} = {1:#x};\n"
        tab_character = "    "
        all: {
            start = "package me.teklad.tuxdump.{0}\n"
        }
        signatures: {
            start = "public class Signatures {{\n"
            end = "}}\n"
        }
        netvars: {
            start = "public class Netvars {{\n"
            end = "}}\n"
            table_start = "namespace {0} {{\n"
            table_end = "}}\n"
            strip_table_prefix = true
            replace_chars = (
                ["[", "_"],
                [".", "_"],
                ["]"]
            )
        }
    }

    json: {
        timestamp = "    \"timestamp\": {:%Y%m%d%H%M%S},\n"
        variable_offset = "\"{0}\": {1:d},\n"
        variable_strip_at_end = ","
        tab_character = "    "
        all: {
            start = "{{\n"
            end = "}}\n"
        }
        signatures: {
            start = "\"signatures\": {{\n"
            end = "}}\n"
        }
        netvars: {
            start = "\"netvars\": {{\n"
            end = "}}\n"
            table_start = "\"{0}\": {{\n"
            table_end = "}}\n"
        }
    }

    raw: {
        variable_offset = "{0} = {1:#x}\n"
        netvars: {
            table_start = "{0}\n"
            table_end = "\n"
        }
    }
}
