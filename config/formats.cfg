formats: {
    cpp: {
        timestamp = "// Generated on {:%Y-%m-%d %H:%M:%S}\n"
        file_start = "#ifndef  __TD_{0}_H__\n#define  __TD_{0}_H__\n#include <cstdint>\n\n"
        file_end = "#endif //__TD_{0}_H__\n"
        variable_offset = "constexpr uintptr_t {0} = {1:#x};\n"
        netvars_start = "namespace Netvars {{\n"
        netvars_end = "}}\n"
        signatures_start = "namespace Signatures {{\n"
        signatures_end = "}}\n"
        netvar_table_start = "namespace {0} {{\n"
        netvar_table_end = "}}\n"
        depth_delimiter = "    "
    }

    java: {
        timestamp = "// Generated on {:%Y-%m-%d %H:%M:%S}\n"
        file_start = "package me.teklad.tuxdump.{0}\n"
        variable_offset = "public static final long {0} = {1:#x};\n"
        netvars_start = "public class Netvars {{\n"
        netvars_end = "}}\n"
        signatures_start = "public class Signatures {{\n"
        signatures_end = "}}\n"
        netvar_table_start = "public static class {0} {{\n"
        netvar_table_end = "}}"
        depth_delimiter = "    "
    }

    json: {
        timestamp = "    \"timestamp\": {:%Y%m%d%H%M%S},\n"
        file_start = "{{\n"
        file_end = "}}\n"
        variable_offset = "    \"{0}\": {1:d},\n"
        netvars_start = "    \"netvars\": {{\n"
        netvars_end = "        \"end\": 0\n    }}\n"
        signatures_start = "    \"signatures\": {{\n"
        signatures_end = "        \"end\": 0\n    }}\n"
        netvar_table_start = "{{\n"
        netvar_table_end = "}}\n"
        depth_delimiter = "    "
    }

    raw: {
        variable_offset = "{0} = {1:#x}\n"
        netvar_table_start = "{0}\n"
        netvar_table_end = "\n"
    }
}
